@page "/user"
@layout UserLayout

<PageTitle>Страница пользователя</PageTitle>

@if (UserInfo != null && UserInfo.Success)
{
    <h4>Пользователь - @UserInfo.Data.FullName</h4>

    <div style="display:@(IsTesting ? "none" : "");">
        <div class="card mt-2">
            <div class="card-header">
                Список тестов
            </div>
            <div class="card-body p-2">
                <div class="d-flex flex-row">
                    @foreach (var group in UserInfo.Data.GroupUsers)
                    {
                        if (group.Status == 2)
                        {
                            <div class="card">
                                <div class="card-body p-2 text-center">
                                    <h5 class="card-title display-6">@group.GroupTitle</h5>
                                </div>
                                <div class="card-footer p-1 text-center">
                                    <button class="btn btn-primary" @onclick="() => ButtonClick(group.Id)" disabled="@(group.Status == 1)">Начать тест</button>
                                </div>
                            </div>
                        }
                        else if (group.Status == 1)
                        {
                            <div class="card">
                                <div class="card-body p-2 text-center">
                                    <h5 class="card-title display-6">@group.GroupTitle</h5>
                                    <h4>Нет допуска к тесту</h4>
                                </div>
                            </div>
                        }
                        else
                        {
                            <h1>Нет тестов для прохождения</h1>
                        }
                    }
                </div>
            </div>
        </div>

        <div class="card mt-2">
            <div class="card-header">
                Результаты
            </div>
            <div class="card-body">
                @if (UserInfo.Data.GroupUsers.Any(r => r.Results!.Count > 0 && r.Status != 2))
                {
                    <NexusTableGrid TItem="GroupUserInfoTestDTO" Data="@UserInfo.Data.GroupUsers.Where(u => u.Status != 2).ToList()">
                        <Columns>
                            <NexusTableGridColumn Title="#">
                                <CellTemplate>
                                    @(UserInfo.Data.GroupUsers.IndexOf(context) + 1)
                                </CellTemplate>
                            </NexusTableGridColumn>
                            <NexusTableGridColumn Title="Наименование" Property="gu => gu.GroupTitle" />
                            <NexusTableGridColumn Title="Кол-во вопросов">
                                <CellTemplate>
                                    @(context.Results.Count)
                                </CellTemplate>
                            </NexusTableGridColumn>
                            <NexusTableGridColumn Title="Кол-во пр. ответов">
                                <CellTemplate>
                                    @(context.Results.Count(r => r.IsCorrect))
                                </CellTemplate>
                            </NexusTableGridColumn>
                            <NexusTableGridColumn Title="% пр. ответов">
                                <CellTemplate>
                                    @((context.Results.Count(r => r.IsCorrect) * 100) / context.Results.Count)
                                </CellTemplate>
                            </NexusTableGridColumn>
                        </Columns>
                    </NexusTableGrid>
                }
                else
                {
                    <h1>Нет результатов</h1>
                }
            </div>
        </div>
    </div>

    <div style="display:@(!IsTesting ? "none" : "");">
        @if (TestQuestions != null)
        {
            <div class="container py-5">
                <div class="card shadow-lg">
                    <div class="card-body m-1 p-2">

                        <!-- Заголовок + таймер -->
                        <div class="d-flex justify-content-end align-items-center border-bottom pb-2 mb-3">
                            <Countdown @ref="Timer" TimerPause="TimerPauseCallback" TimerOut="TimerOutCallback" />
                        </div>

                        <!-- Прогресс -->
                        <div class="mb-4">
                            <div class="progress" style="height: 20px;">
                                <div class="progress-bar bg-primary" style="width:@TestProgressPercent%">
                                    @(TestQuestions.Count(t => t.AnswerId != null)) / @TestQuestions.Count
                                </div>
                            </div>
                        </div>

                        <!-- Вопрос -->
                        <div class="mb-4">
                            <h5 class="mb-3">Вопрос @(CurrentQuestionIndex + 1): @TestQuestions[CurrentQuestionIndex].Question!.Title</h5>

                            @foreach (var answer in TestQuestions[CurrentQuestionIndex].Question!.AnswerItems!)
                            {
                                <div class="form-check" @onclick="() => SetAnswer(TestQuestions[CurrentQuestionIndex], answer.Id)">
                                    <input class="form-check-input" type="radio" name="q@CurrentQuestionIndex"
                                           checked="@(TestQuestions[CurrentQuestionIndex].AnswerId == answer.Id)">
                                    <label class="form-check-label">
                                        @answer.Title
                                    </label>
                                </div>
                            }
                        </div>

                        <!-- Навигация -->
                        <div class="btn-group d-flex justify-content-center align-items-center gap-1 m-3" role="group" aria-label="Basic example">
                            <button class="btn btn-secondary text-nowrap" @onclick="PrevQuestion"
                                    disabled="@(CurrentQuestionIndex == 0)">
                                Предыдущий вопрос
                            </button>
                            <button class="btn btn-primary text-nowrap" @onclick="NextQuestion"
                                    disabled="@(CurrentQuestionIndex == TestQuestions.Count - 1)">
                                Следующий вопрос
                            </button>
                        </div>
                        <div class="d-flex flex-wrap justify-content-center gap-1">
                            @for (int i = 0; i < TestQuestions.Count; i++)
                            {
                                var idx = i;
                                string cssClass = "";

                                if (idx == CurrentQuestionIndex)
                                    cssClass += "btn-primary"; // активный вопрос
                                else if (TestQuestions[idx].AnswerId != null)
                                    cssClass += "btn-success"; // ответ дан
                                else
                                    cssClass += "btn-outline-secondary"; // пустой

                                <button @key="idx" class="btn btn-sm @cssClass"
                                        @onclick="() => GoToQuestion(idx)" style="width:52px;">
                                    @(idx + 1)
                                </button>
                            }
                        </div>

                        @if (CurrentQuestionIndex == TestQuestions.Count - 1)
                        {
                            <button class="btn btn-primary m-3" @onclick="CompleteTest">
                                Завершить тест
                            </button>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
}
